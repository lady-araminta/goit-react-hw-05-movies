{"version":3,"file":"static/js/820.d7808121.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.js","pages/Movies/Movies.js","utils/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { fetchMoviesByName } from 'utils/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchQuery) {\n      setMovies([]);\n      setLoading(false);\n      return;\n    }\n    if (searchQuery.trim() === '') {\n      toast('Enter a search query!');\n      setLoading(false);\n      return;\n    }\n    fetchMoviesByName(searchQuery.toLowerCase().trim())\n      .then(({ results, total_results }) => {\n        setMovies(results);\n        setLoading(false);\n        if (total_results === 0) {\n          setLoading(false);\n          toast('Sorry, nothing was found for your search');\n        }\n      })\n      .catch(error => {\n        setLoading(false);\n        return toast('Something went wrong! Please retry!');\n      });\n  }, [searchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    const searchQuery = e.target.elements.search.value;\n    setSearchParams(searchQuery !== '' ? { query: searchQuery.trim() } : {});\n    if (searchQuery === '') {\n      setLoading(false);\n      toast('Enter a search query!');\n      return;\n    }\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input name=\"search\" />\n          <button type=\"submit\">Search</button>\n        </form>\n      </div>\n      {loading && <Loader />}\n      {movies.length > 0 && !loading && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","const API_KEY = 'b59a60e3d4b462ae9c6c6d62e7fdcb56';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nexport const BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMoviesByName = query => {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Something went wrong! Please retry'));\n  });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMovieCast = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMovieReviews = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n"],"names":["MoviesList","movies","location","useLocation","map","id","title","to","state","from","useState","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","trim","toast","fetchMoviesByName","toLowerCase","then","results","total_results","catch","error","onSubmit","e","preventDefault","target","elements","search","value","query","reset","name","type","length","API_KEY","BASE_URL","BASE_IMAGE_URL","fetchTrendingMovies","fetch","response","ok","json","Promise","reject","Error","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}
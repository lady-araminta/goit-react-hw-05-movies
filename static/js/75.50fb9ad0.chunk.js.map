{"version":3,"file":"static/js/75.50fb9ad0.chunk.js","mappings":"mMAEaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,EAMZ,KAGN,C,6FCeD,UA1Ba,WACX,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAeA,OAdAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACXE,EAAAA,EAAAA,MACGC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPN,EAAQM,GACRJ,GAAW,EACZ,IACAK,OAAM,SAAAC,GAGL,OAFAR,EAAQ,IACRE,GAAW,IACJO,EAAAA,EAAAA,IAAM,sCACd,GACJ,GAAE,KAGD,gCACE,4CACCR,IAAW,SAAC,IAAD,IACXF,EAAKW,OAAS,IAAMT,IAAW,SAAC,IAAD,CAAYZ,OAAQU,MAGzD,C,8KC9BD,IAAMY,EAAU,mCACVC,EAAW,gCACJC,EAAiB,kCAEjBT,EAAsB,WACjC,OAAOU,MAAM,GAAD,OAAIF,EAAJ,sCAA0CD,IAAWN,MAC/D,SAAAU,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GAEJ,EAEYC,EAAoB,SAAAC,GAC/B,OAAOR,MAAM,GAAD,OACPF,EADO,gCACyBD,EADzB,kBAC0CW,EAD1C,gCAEVjB,MAAK,SAAAU,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GACF,EAEYG,EAAoB,SAAAC,GAC/B,OAAOV,MAAM,GAAD,OAAIF,EAAJ,iBAAqBY,EAArB,oBAAwCb,IAAWN,MAC7D,SAAAU,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GAEJ,EAEYK,EAAiB,SAAAD,GAC5B,OAAOV,MAAM,GAAD,OAAIF,EAAJ,iBAAqBY,EAArB,4BAAgDb,IAAWN,MACrE,SAAAU,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GAEJ,EAEYM,EAAoB,SAAAF,GAC/B,OAAOV,MAAM,GAAD,OAAIF,EAAJ,iBAAqBY,EAArB,4BAAgDb,IAAWN,MACrE,SAAAU,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GAEJ,C","sources":["components/MoviesList/MoviesList.js","pages/Home/Home.js","utils/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import { fetchTrendingMovies } from 'utils/api';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    fetchTrendingMovies()\n      .then(({ results }) => {\n        setData(results);\n        setLoading(false);\n      })\n      .catch(error => {\n        setData([]);\n        setLoading(false);\n        return toast('Something went wrong! Please retry!');\n      });\n  }, []);\n\n  return (\n    <section>\n      <h2>Trendings today</h2>\n      {loading && <Loader />}\n      {data.length > 0 && !loading && <MoviesList movies={data} />}\n    </section>\n  );\n};\n\nexport default Home;\n","const API_KEY = 'b59a60e3d4b462ae9c6c6d62e7fdcb56';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nexport const BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMoviesByName = query => {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Something went wrong! Please retry'));\n  });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMovieCast = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMovieReviews = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n"],"names":["MoviesList","movies","location","useLocation","map","id","title","to","state","from","useState","data","setData","loading","setLoading","useEffect","fetchTrendingMovies","then","results","catch","error","toast","length","API_KEY","BASE_URL","BASE_IMAGE_URL","fetch","response","ok","json","Promise","reject","Error","fetchMoviesByName","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}
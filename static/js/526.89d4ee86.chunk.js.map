{"version":3,"file":"static/js/526.89d4ee86.chunk.js","mappings":"mNAEaA,EAAOC,EAAAA,GAAAA,GAAH,qJAQJC,EAAWD,EAAAA,GAAAA,GAAH,gPAORE,EAAWF,EAAAA,GAAAA,KAAH,kK,iBCZRG,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxB,OACE,SAACT,EAAD,WACE,UAAC,KAAD,CAAMU,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,WACE,gBACES,IACEJ,EAAW,UACJK,EAAAA,IADI,OACaL,GACpB,kCAENM,IAAKP,KAEP,SAACP,EAAD,UAAWO,QAVAD,EAclB,KAGN,C,gJC1BYS,EAAOjB,EAAAA,GAAAA,QAAH,0CAGJkB,EAAYlB,EAAAA,GAAAA,GAAH,uE,SC4BtB,EA1Ba,WACX,OAAwBmB,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAeA,OAdAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACXE,EAAAA,EAAAA,MACGC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPN,EAAQM,GACRJ,GAAW,EACZ,IACAK,OAAM,SAAAC,GAGL,OAFAR,EAAQ,IACRE,GAAW,IACJO,EAAAA,EAAAA,IAAM,sCACd,GACJ,GAAE,KAGD,UAACb,EAAD,YACE,SAACC,EAAD,8BACCI,IAAW,SAACS,EAAA,EAAD,IACXX,EAAKY,OAAS,IAAMV,IAAW,SAACnB,EAAA,EAAD,CAAYC,OAAQgB,MAGzD,C,8KC/BD,IAAMa,EAAU,mCACVC,EAAW,gCACJnB,EAAiB,kCAEjBU,EAAsB,WACjC,OAAOU,MAAM,GAAD,OAAID,EAAJ,sCAA0CD,IAAWP,MAC/D,SAAAU,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GAEJ,EAEYC,EAAoB,SAAAC,GAC/B,OAAOR,MAAM,GAAD,OACPD,EADO,gCACyBD,EADzB,kBAC0CU,EAD1C,gCAEVjB,MAAK,SAAAU,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GACF,EAEYG,EAAoB,SAAAC,GAC/B,OAAOV,MAAM,GAAD,OAAID,EAAJ,iBAAqBW,EAArB,oBAAwCZ,IAAWP,MAC7D,SAAAU,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GAEJ,EAEYK,EAAiB,SAAAD,GAC5B,OAAOV,MAAM,GAAD,OAAID,EAAJ,iBAAqBW,EAArB,4BAAgDZ,IAAWP,MACrE,SAAAU,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GAEJ,EAEYM,EAAoB,SAAAF,GAC/B,OAAOV,MAAM,GAAD,OAAID,EAAJ,iBAAqBW,EAArB,4BAAgDZ,IAAWP,MACrE,SAAAU,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GAEJ,C","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","pages/Home/Home.styled.js","pages/Home/Home.js","utils/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-basis: calc((100% - 30px) / 4);\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nexport const FilmInfo = styled.span`\n  display: flex;\n  align-items: center;\n  padding-left: 8px;\n  height: 50px;\n  color: #000;\n  font-size: 16px;\n  font-weight: 700;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FilmInfo, List, ListItem } from './MoviesList.styled';\nimport { BASE_IMAGE_URL } from 'utils/api';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <ListItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={\n                  poster_path\n                    ? `${BASE_IMAGE_URL}${poster_path}`\n                    : 'https://i.imgur.com/brJrHsa.jpg'\n                }\n                alt={title}\n              />\n              <FilmInfo>{title}</FilmInfo>\n            </Link>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Main = styled.section`\n  padding: 16px;\n`;\nexport const MainTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 16px;\n`;\n","import { fetchTrendingMovies } from 'utils/api';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Main, MainTitle } from './Home.styled';\n\nconst Home = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    fetchTrendingMovies()\n      .then(({ results }) => {\n        setData(results);\n        setLoading(false);\n      })\n      .catch(error => {\n        setData([]);\n        setLoading(false);\n        return toast('Something went wrong! Please retry!');\n      });\n  }, []);\n\n  return (\n    <Main>\n      <MainTitle>Trendings today</MainTitle>\n      {loading && <Loader />}\n      {data.length > 0 && !loading && <MoviesList movies={data} />}\n    </Main>\n  );\n};\n\nexport default Home;\n","const API_KEY = 'b59a60e3d4b462ae9c6c6d62e7fdcb56';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nexport const BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMoviesByName = query => {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Something went wrong! Please retry'));\n  });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMovieCast = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMovieReviews = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n"],"names":["List","styled","ListItem","FilmInfo","MoviesList","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","BASE_IMAGE_URL","alt","Main","MainTitle","useState","data","setData","loading","setLoading","useEffect","fetchTrendingMovies","then","results","catch","error","toast","Loader","length","API_KEY","BASE_URL","fetch","response","ok","json","Promise","reject","Error","fetchMoviesByName","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}
{"version":3,"file":"static/js/631.a0ffbe5f.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js","utils/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const DetailsSection = styled.section`\n  padding: 16px;\n`;\nexport const BackLink = styled(Link)`\n  display: block;\n  margin-bottom: 16px;\n  color: #fff;\n  background-color: navy;\n  padding: 8px;\n  border-radius: 4px;\n  width: 96px;\n  text-align: center;\n  &:hover,\n  &:focus {\n    color: navy;\n    background-color: #fff;\n  }\n`;\nexport const FilmCard = styled.div`\n  display: flex;\n  margin-bottom: 16px;\n`;\nexport const Description = styled.div`\n  padding-left: 24px;\n`;\nexport const DescriptionItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\nexport const Additionally = styled.ul`\n  display: flex;\n  gap: 16px;\n`;\nexport const AdditLink = styled(Link)`\n  display: block;\n  color: #fff;\n  background-color: navy;\n  padding: 8px;\n  border-radius: 4px;\n  width: 96px;\n  text-align: center;\n  &:hover,\n  &:focus {\n    color: navy;\n    background-color: #fff;\n  }\n`;\n","import { fetchMovieDetails, BASE_IMAGE_URL } from 'utils/api';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  Additionally,\n  AdditLink,\n  BackLink,\n  Description,\n  DescriptionItem,\n  DetailsSection,\n  FilmCard,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [info, setInfo] = useState({});\n  const [genreList, setGenreList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    fetchMovieDetails(movieId)\n      .then(info => {\n        setInfo(info);\n        const genreList = [];\n        info.genres.forEach(({ name }) => genreList.push(name));\n        setGenreList(genreList);\n        setLoading(false);\n      })\n      .catch(error => {\n        setLoading(false);\n        return toast('Something went wrong! Please retry!');\n      });\n  }, [movieId]);\n\n  const releaseYear = new Date(info.release_date);\n\n  return (\n    <DetailsSection>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      {info && !loading && (\n        <>\n          <FilmCard>\n            <img\n              src={\n                info.poster_path\n                  ? `${BASE_IMAGE_URL}${info.poster_path}`\n                  : 'https://i.imgur.com/brJrHsa.jpg'\n              }\n              alt={info.title}\n              width=\"320\"\n            />\n            <Description>\n              <DescriptionItem>\n                <h3>\n                  {info.title} ({releaseYear.getFullYear()})\n                </h3>\n              </DescriptionItem>\n              <DescriptionItem>\n                <h5>User score:</h5>\n                <p>\n                  {info.vote_average}/{info.vote_count}\n                </p>\n              </DescriptionItem>\n              <DescriptionItem>\n                <h5>Overview</h5>\n                <p>{info.overview}</p>\n              </DescriptionItem>\n              <DescriptionItem>\n                <h5>Genres</h5>\n                <p>{genreList.join(', ')}</p>\n              </DescriptionItem>\n            </Description>\n          </FilmCard>\n          <Additionally>\n            <li>\n              <AdditLink to=\"cast\" state={{ from: backLinkHref }}>\n                Cast\n              </AdditLink>\n            </li>\n            <li>\n              <AdditLink to=\"reviews\" state={{ from: backLinkHref }}>\n                Reviews\n              </AdditLink>\n            </li>\n          </Additionally>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </DetailsSection>\n  );\n};\n\nexport default MovieDetails;\n","const API_KEY = 'b59a60e3d4b462ae9c6c6d62e7fdcb56';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nexport const BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMoviesByName = query => {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Something went wrong! Please retry'));\n  });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMovieCast = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMovieReviews = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n"],"names":["DetailsSection","styled","BackLink","Link","FilmCard","Description","DescriptionItem","Additionally","AdditLink","useState","info","setInfo","genreList","setGenreList","loading","setLoading","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","fetchMovieDetails","then","genres","forEach","name","push","catch","error","toast","releaseYear","Date","release_date","to","src","poster_path","BASE_IMAGE_URL","alt","title","width","getFullYear","vote_average","vote_count","overview","join","Suspense","fallback","Loader","API_KEY","BASE_URL","fetchTrendingMovies","fetch","response","ok","json","Promise","reject","Error","fetchMoviesByName","query","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}
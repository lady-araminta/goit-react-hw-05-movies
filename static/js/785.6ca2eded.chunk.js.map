{"version":3,"file":"static/js/785.6ca2eded.chunk.js","mappings":"qMAmCA,UA9BgB,WACd,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OATAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GACfI,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPN,EAAeM,EAChB,IACAC,OAAM,SAAAC,GACL,OAAOC,EAAAA,EAAAA,IAAM,sCACd,GACJ,GAAE,CAACR,IACuB,IAAvBF,EAAYW,QACP,qEAGL,wBACGX,EAAYY,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GACnC,OACE,2BACE,qCAAaF,MACb,uBAAIC,MAFGC,EAKZ,KAIR,C,8KCjCD,IAAMC,EAAU,mCACVC,EAAW,gCACJC,EAAiB,kCAEjBC,EAAsB,WACjC,OAAOC,MAAM,GAAD,OAAIH,EAAJ,sCAA0CD,IAAWV,MAC/D,SAAAe,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GAEJ,EAEYC,EAAoB,SAAAC,GAC/B,OAAOR,MAAM,GAAD,OACPH,EADO,gCACyBD,EADzB,kBAC0CY,EAD1C,gCAEVtB,MAAK,SAAAe,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GACF,EAEYG,EAAoB,SAAA3B,GAC/B,OAAOkB,MAAM,GAAD,OAAIH,EAAJ,iBAAqBf,EAArB,oBAAwCc,IAAWV,MAC7D,SAAAe,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GAEJ,EAEYI,EAAiB,SAAA5B,GAC5B,OAAOkB,MAAM,GAAD,OAAIH,EAAJ,iBAAqBf,EAArB,4BAAgDc,IAAWV,MACrE,SAAAe,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GAEJ,EAEYrB,EAAoB,SAAAH,GAC/B,OAAOkB,MAAM,GAAD,OAAIH,EAAJ,iBAAqBf,EAArB,4BAAgDc,IAAWV,MACrE,SAAAe,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GAEJ,C","sources":["components/Reviews/Reviews.js","utils/api.js"],"sourcesContent":["import { fetchMovieReviews } from 'utils/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\n\nconst Reviews = () => {\n  const [dataReviews, setDataReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    fetchMovieReviews(movieId)\n      .then(({ results }) => {\n        setDataReviews(results);\n      })\n      .catch(error => {\n        return toast('Something went wrong! Please retry!');\n      });\n  }, [movieId]);\n  if (dataReviews.length === 0) {\n    return <p>We don't have any reviews for this movie</p>;\n  } else {\n    return (\n      <ul>\n        {dataReviews.map(({ author, content, id }) => {\n          return (\n            <li key={id}>\n              <h5>Author: {author}</h5>\n              <p>{content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n};\n\nexport default Reviews;\n","const API_KEY = 'b59a60e3d4b462ae9c6c6d62e7fdcb56';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nexport const BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMoviesByName = query => {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Something went wrong! Please retry'));\n  });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMovieCast = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMovieReviews = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n"],"names":["useState","dataReviews","setDataReviews","movieId","useParams","useEffect","fetchMovieReviews","then","results","catch","error","toast","length","map","author","content","id","API_KEY","BASE_URL","BASE_IMAGE_URL","fetchTrendingMovies","fetch","response","ok","json","Promise","reject","Error","fetchMoviesByName","query","fetchMovieDetails","fetchMovieCast"],"sourceRoot":""}
{"version":3,"file":"static/js/541.f6053a9e.chunk.js","mappings":"qMA2CA,UAtCa,WACX,OAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OAVAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GACZI,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPN,EAAYM,EACb,IACAC,OAAM,SAAAC,GACL,OAAOC,EAAAA,EAAAA,IAAM,sCACd,GACJ,GAAE,CAACR,KAGF,wBACGF,EAASW,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACpC,OACE,2BACE,gBACEC,IACED,EAAY,UACLE,EAAAA,IADK,OACYF,GACpB,kCAENG,IAAKL,EACLM,MAAM,QAER,4BACE,uBAAIN,KACJ,uCAAeC,UAZVF,EAgBZ,KAGN,C,8KCzCD,IAAMQ,EAAU,mCACVC,EAAW,gCACJJ,EAAiB,kCAEjBK,EAAsB,WACjC,OAAOC,MAAM,GAAD,OAAIF,EAAJ,sCAA0CD,IAAWd,MAC/D,SAAAkB,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GAEJ,EAEYC,EAAoB,SAAAC,GAC/B,OAAOR,MAAM,GAAD,OACPF,EADO,gCACyBD,EADzB,kBAC0CW,EAD1C,gCAEVzB,MAAK,SAAAkB,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GACF,EAEYG,EAAoB,SAAA9B,GAC/B,OAAOqB,MAAM,GAAD,OAAIF,EAAJ,iBAAqBnB,EAArB,oBAAwCkB,IAAWd,MAC7D,SAAAkB,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GAEJ,EAEYxB,EAAiB,SAAAH,GAC5B,OAAOqB,MAAM,GAAD,OAAIF,EAAJ,iBAAqBnB,EAArB,4BAAgDkB,IAAWd,MACrE,SAAAkB,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GAEJ,EAEYI,EAAoB,SAAA/B,GAC/B,OAAOqB,MAAM,GAAD,OAAIF,EAAJ,iBAAqBnB,EAArB,4BAAgDkB,IAAWd,MACrE,SAAAkB,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,sCACjC,GAEJ,C","sources":["components/Cast/Cast.js","utils/api.js"],"sourcesContent":["import { fetchMovieCast, BASE_IMAGE_URL } from 'utils/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\n\nconst Cast = () => {\n  const [dataCast, setDataCast] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    fetchMovieCast(movieId)\n      .then(({ cast }) => {\n        setDataCast(cast);\n      })\n      .catch(error => {\n        return toast('Something went wrong! Please retry!');\n      });\n  }, [movieId]);\n\n  return (\n    <ul>\n      {dataCast.map(({ id, name, character, profile_path }) => {\n        return (\n          <li key={id}>\n            <img\n              src={\n                profile_path\n                  ? `${BASE_IMAGE_URL}${profile_path}`\n                  : 'https://i.imgur.com/brJrHsa.jpg'\n              }\n              alt={name}\n              width=\"96\"\n            />\n            <div>\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n","const API_KEY = 'b59a60e3d4b462ae9c6c6d62e7fdcb56';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nexport const BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMoviesByName = query => {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Something went wrong! Please retry'));\n  });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMovieCast = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMovieReviews = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n"],"names":["useState","dataCast","setDataCast","movieId","useParams","useEffect","fetchMovieCast","then","cast","catch","error","toast","map","id","name","character","profile_path","src","BASE_IMAGE_URL","alt","width","API_KEY","BASE_URL","fetchTrendingMovies","fetch","response","ok","json","Promise","reject","Error","fetchMoviesByName","query","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}
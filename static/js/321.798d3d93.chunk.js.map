{"version":3,"file":"static/js/321.798d3d93.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.js","utils/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  flex-basis: calc((100% - 30px) / 4);\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nexport const FilmInfo = styled.span`\n  display: flex;\n  align-items: center;\n  padding-left: 8px;\n  height: 50px;\n  color: #000;\n  font-size: 16px;\n  font-weight: 700;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FilmInfo, List, ListItem } from './MoviesList.styled';\nimport { BASE_IMAGE_URL } from 'utils/api';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <ListItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={\n                  poster_path\n                    ? `${BASE_IMAGE_URL}${poster_path}`\n                    : 'https://i.imgur.com/brJrHsa.jpg'\n                }\n                alt={title}\n              />\n              <FilmInfo>{title}</FilmInfo>\n            </Link>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MoviesSection = styled.section`\n  padding: 16px;\n`;\nexport const SearchBar = styled.form`\n  display: flex;\n  margin: 32px auto;\n  justify-content: center;\n`;\nexport const SearchInput = styled.input`\n  width: 240px;\n  margin-right: 16px;\n  border-radius: 4px;\n  padding: 8px;\n  font-size: 16px;\n`;\nexport const Btn = styled.button`\n  cursor: pointer;\n  border: 1px solid gray;\n  background-color: transparent;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  font-size: 16px;\n  &:hover,\n  &:focus {\n    color: #fff;\n    background-color: navy;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { fetchMoviesByName } from 'utils/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Btn, MoviesSection, SearchBar, SearchInput } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchQuery) {\n      setMovies([]);\n      setLoading(false);\n      return;\n    }\n    if (searchQuery.trim() === '') {\n      toast('Enter a search query!');\n      setLoading(false);\n      return;\n    }\n    fetchMoviesByName(searchQuery.toLowerCase().trim())\n      .then(({ results, total_results }) => {\n        setMovies(results);\n        setLoading(false);\n        if (total_results === 0) {\n          setLoading(false);\n          toast('Sorry, nothing was found for your search');\n        }\n      })\n      .catch(error => {\n        setLoading(false);\n        return toast('Something went wrong! Please retry!');\n      });\n  }, [searchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    const searchQuery = e.target.elements.search.value;\n    setSearchParams(searchQuery !== '' ? { query: searchQuery.trim() } : {});\n    if (searchQuery === '') {\n      setLoading(false);\n      toast('Enter a search query!');\n      return;\n    }\n    e.target.reset();\n  };\n\n  return (\n    <MoviesSection>\n      <div>\n        <SearchBar onSubmit={handleSubmit}>\n          <SearchInput name=\"search\" />\n          <Btn type=\"submit\">Search</Btn>\n        </SearchBar>\n      </div>\n      {loading && <Loader />}\n      {movies.length > 0 && !loading && <MoviesList movies={movies} />}\n    </MoviesSection>\n  );\n};\n\nexport default Movies;\n","const API_KEY = 'b59a60e3d4b462ae9c6c6d62e7fdcb56';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nexport const BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMoviesByName = query => {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Something went wrong! Please retry'));\n  });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMovieCast = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n\nexport const fetchMovieReviews = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Something went wrong! Please retry'));\n    }\n  );\n};\n"],"names":["List","styled","ListItem","FilmInfo","MoviesList","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","BASE_IMAGE_URL","alt","MoviesSection","SearchBar","SearchInput","Btn","useState","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","trim","toast","fetchMoviesByName","toLowerCase","then","results","total_results","catch","error","onSubmit","e","preventDefault","target","elements","search","value","query","reset","name","type","Loader","length","API_KEY","BASE_URL","fetchTrendingMovies","fetch","response","ok","json","Promise","reject","Error","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}